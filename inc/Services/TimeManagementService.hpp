#ifndef ECSS_SERVICES_TIMEMANAGEMENTSERVICE_HPP
#define ECSS_SERVICES_TIMEMANAGEMENTSERVICE_HPP

#include <Service.hpp>
#include "Helpers/TimeHelper.hpp"

/**
 * Implementation of the ST[09] time management implementation
 *
 * @todo When the time comes for the application processes we should consider this: All reports
 * generated by the application process that is identified by APID 0 are time reports.
 * @todo check if we need to implement the time reporting control subservice
 * @todo check if we need to declare the time accuracy that the standard claims in the spacecraft
 * time reference section(6.9.3.d,e)
 */
class TimeManagementService : public Service {
public:
	TimeManagementService() {
		serviceType = 9;
	}

	/**
	 * @param seconds the seconds provided from the RTC. This function in general should have
	 * parameters corresponding with the RTC. For the time being we assume that the RTC has a
	 * 32-bit counter that counts seconds(the RTC in Nucleo F103RB!).
	 * @todo check if we need spacecraft time reference status
	 * @todo The time reports generated by the time reporting subservice are spacecraft time
	 * packets. A spacecraft time packet does not carry the message type, consisting of the
	 * service type and message subtype
	 */
	void cucTimeReport(uint32_t seconds);
};


#endif //ECSS_SERVICES_TIMEMANAGEMENTSERVICE_HPP
